import React, { useState } from "react";
import { cryptonateAbi } from "../abi/abi";
import Web3 from "web3";

import "./Payment.css";
import SocialPersonOutline from "material-ui/svg-icons/social/person-outline";
import ContentRemoveCircleOutline from "material-ui/svg-icons/content/remove-circle-outline";

const BigNumber = require('bignumber.js');

const HDWalletProvider = require('@truffle/hdwallet-provider');
const mnemonic = 'dwarf tiger slot hockey divorce decrease cat satisfy rhythm similar plunge cinnamon';
const wallet = new HDWalletProvider(mnemonic, "https://rinkeby.infura.io/v3/9aa3d95b3bc440fa88ea12eaa4456161");
const ethNetwork = 'https://rinkeby.infura.io/v3/a25a59096a4046258848674cfe1c8eff';
const web3 = new Web3(wallet);
const account = "0x16299BEE572E4767794afdffF09ABaF0c33F7345";
const contractAddress = "0x32F2f283106c61F5A2B97C34864f7fA97307D719";
const contractBytecode = "";
const cryptoContract = new web3.eth.Contract(cryptonateAbi, contractAddress);
cryptoContract.deploy({
    arguments: ["Time", 50, 1, ["Well", "Farm", "House"], '0x66C114C24e9a2012c5c2e55cd2784F46fDA838dE'],
    data: contractBytecode
});
const truffleAssert = require('truffle-assertions');
console.log(cryptoContract.methods.minContribution);

export default function Payment() {
    const [override, setOverride] = useState(false);
    const [vote, setVote] = useState('');
    const [minContribution, setminContribution] = useState(0);
    const [value, setValue] = useState(minContribution);
    const [goalMet, setGoalMet] = useState(false);

      const donate = async (t) => {
        t.preventDefault();
        const accounts = await window.ethereum.enable();
        const account = accounts[0];
        const newVote = parseInt(vote);
        const newValue = parseInt(value);
                
        const post = await cryptoContract.methods.donate(newVote).send({
          from: account,
          to: '0x66C114C24e9a2012c5c2e55cd2784F46fDA838dE',
          value: newValue
        }); 

    

        if ("DonationGoalMet" === ((await cryptoContract.getPastEvents("allEvents", {fromBlock: 0, toBlock: "latest"})).slice(-1)[0]["event"])) {
          setGoalMet(true);
          console.log("You have done it my man!");
        }
      };

      const releaseFunds = async (t) => {
        t.preventDefault();
        const newOverride = false;

        const post = await cryptoContract.methods.releaseFunds(newOverride).send({
          from: account
        });

        truffleAssert.eventEmitted(cryptoContract, 'FundsSent', (event) => {
            return event.project;
        });
      };

    return (
        <div className="donation__main">
        <div className="donation__card">
          <form className="donation__form" onSubmit={donate}>
            <label>
              Enter Vote:
              <input
                className="input"
                type="number"
                name="name"
                onChange={event => setVote(event.target.value)}
              />
            </label>
            <br/>
            <label>
              Enter Donation Amount:
              <input
                className="input"
                type="number"
                name="name"
                onChange={event => setValue(event.target.value)}
              />
            </label>
  
            <button className="button" type="submit" value="Confirm">
              Confirm
            </button>
          </form>
          <br />
          <button className="button" onClick={releaseFunds} type="button">
            Release Funds
          </button>
        </div>
      </div>
    );
}
